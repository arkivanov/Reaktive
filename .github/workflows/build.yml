name: Build

on:
  push:
    branches:
      - master
      - mt-coroutines
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest ]
    runs-on: ${{matrix.os}}
    name: Build on ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev libgtk-3-dev nodejs chromium-browser
      - name: Select Xcode version
        if: matrix.os == 'macOS-latest'
        uses: maxim-lobanov/setup-xcode@9a697e2b393340c3cacd97468baa318e4c883d98
        with:
          xcode-version: '13.4.1'
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            build
            linkDebugTestLinuxArm32Hfp
            -Ptarget=all_linux_hosted
      - name: Test linuxArm32Hfp
        if: matrix.os == 'ubuntu-latest'
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: armv7
          distro: ubuntu20.04
          run: |
            ./utils/build/bin/linuxArm32Hfp/debugTest/test.kexe
            ./reaktive/build/bin/linuxArm32Hfp/debugTest/test.kexe
            ./reaktive-testing/build/bin/linuxArm32Hfp/debugTest/test.kexe
      - name: Build macOS
        if: matrix.os == 'macOS-latest'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            :reaktive-annotations:build
            :utils:build
            :reaktive-testing:build
            :reaktive:build
            :coroutines-interop:build
            -Ptarget=all_macos_hosted
      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip
      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip
